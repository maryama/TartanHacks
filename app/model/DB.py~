
from sqlalchemy import MedaData, Table, Column, Integer, Text, ForeignKey
from sqlalchemy.orm import mapper, relationship

import users
import contact
import jobs

metadata = Metadata()

#Tables

user_accounts = Table('users', metatdata,
                    Column('username', Text, primary_key=True),
                    Column('password', Text),
                    Column('contact_id', Integer, ForeignKey('contacts.id')),
                    Column('group', Text),
                    )

students = Table('students', metadata,
                 Column('username', Text, primary_key = True, ForeignKey('users.username')),
                 Column('lname', Text),
                 Column('fname', Text),
                 Column('mname', Text),
                 Column('qualifications', Text),
                 Column('pos_hours', Text)
                 )

employers = Table('employers', metadata,
                   Column('username', Text, primary_key = True, ForeignKey('users.username'))
                  )
                 

contacts = Table('contacts', metadata,
                    Column('id', Integer, primary_key = True),
                    Column('phone'),
                    Column('email', Text),
                    Column('address', Text),
                    Column('city', Text),
                    Column('state', Text),
                    Column('zip', Text)
                    )


jobs_table = Table('jobs', metadata)

candidates = Table('candidates', metadata)

employees = Table('employees', metadata)


# Mappings

mapper(users.User, user_accounts,
       polymorphic_on = user_accounts.c.group, polymorphic_identity = 'user',
       properties = { 'contact': relationship(contact.Contact) }

mapper(jobs.Job, jobs_table)
